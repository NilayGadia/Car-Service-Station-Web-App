[{"/home/sanket/Downloads/Client/Client/src/index.js":"1","/home/sanket/Downloads/Client/Client/src/store.js":"2","/home/sanket/Downloads/Client/Client/src/App.js":"3","/home/sanket/Downloads/Client/Client/src/features/authSlice.js":"4","/home/sanket/Downloads/Client/Client/src/SignIn.jsx":"5","/home/sanket/Downloads/Client/Client/src/Services.jsx":"6","/home/sanket/Downloads/Client/Client/src/Home.jsx":"7","/home/sanket/Downloads/Client/Client/src/Profile.jsx":"8","/home/sanket/Downloads/Client/Client/src/Payments.jsx":"9","/home/sanket/Downloads/Client/Client/src/SignUp.jsx":"10","/home/sanket/Downloads/Client/Client/src/Dashboard.jsx":"11","/home/sanket/Downloads/Client/Client/src/PaymentList.jsx":"12","/home/sanket/Downloads/Client/Client/src/corousel.jsx":"13","/home/sanket/Downloads/Client/Client/src/Footer.jsx":"14","/home/sanket/Downloads/Client/Client/src/Navbar2.jsx":"15","/home/sanket/Downloads/Client/Client/src/Navbar.jsx":"16","/home/sanket/Downloads/Client/Client/src/services/user.js":"17","/home/sanket/Downloads/Client/Client/src/utils/utils.js":"18","/home/sanket/Downloads/Client/Client/src/utils/constants.js":"19"},{"size":328,"mtime":1702405492000,"results":"20","hashOfConfig":"21"},{"size":197,"mtime":1702405492000,"results":"22","hashOfConfig":"21"},{"size":1201,"mtime":1702405492000,"results":"23","hashOfConfig":"21"},{"size":466,"mtime":1702405492000,"results":"24","hashOfConfig":"21"},{"size":3550,"mtime":1702405492000,"results":"25","hashOfConfig":"21"},{"size":10773,"mtime":1702405492000,"results":"26","hashOfConfig":"21"},{"size":5016,"mtime":1702405492000,"results":"27","hashOfConfig":"21"},{"size":3436,"mtime":1702405492000,"results":"28","hashOfConfig":"21"},{"size":4242,"mtime":1702405492000,"results":"29","hashOfConfig":"21"},{"size":4045,"mtime":1702405492000,"results":"30","hashOfConfig":"21"},{"size":3098,"mtime":1702405492000,"results":"31","hashOfConfig":"21"},{"size":1606,"mtime":1702405492000,"results":"32","hashOfConfig":"21"},{"size":1123,"mtime":1702405492000,"results":"33","hashOfConfig":"21"},{"size":557,"mtime":1702405492000,"results":"34","hashOfConfig":"21"},{"size":2774,"mtime":1702405492000,"results":"35","hashOfConfig":"21"},{"size":2199,"mtime":1702405492000,"results":"36","hashOfConfig":"21"},{"size":8944,"mtime":1702405492000,"results":"37","hashOfConfig":"21"},{"size":330,"mtime":1702405492000,"results":"38","hashOfConfig":"21"},{"size":73,"mtime":1702405492000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bje5v3",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sanket/Downloads/Client/Client/src/index.js",[],[],"/home/sanket/Downloads/Client/Client/src/store.js",[],[],"/home/sanket/Downloads/Client/Client/src/App.js",[],[],"/home/sanket/Downloads/Client/Client/src/features/authSlice.js",[],[],"/home/sanket/Downloads/Client/Client/src/SignIn.jsx",["104","105","106"],[],"import { useState , useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link, useHistory  } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { login } from './features/authSlice';\nimport { loginUser as loginUserApi } from './services/user';\n export default function SignIn()\n{ \n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(''); // State to store user data\n\n  // get the history object\n  const history = useHistory()\n\n  // get dispatcher object\n  const dispatch = useDispatch()\n\n  const loginUser = async () => {\n    if (email.length === '' || password.length === '') {\n      toast.error('Please enter both email and password');\n      return;\n    }\n\n    try {\n      // call login API\n      const response = await loginUserApi(email, password);\n\n      if (response.status === 200) {\n        const { token, user } = response.data; // Destructure token and user from the response\n\n        // Store token and user data in sessionStorage or localStorage\n        sessionStorage.setItem('token', token);\n        sessionStorage.setItem('userId', user.userId);\n        sessionStorage.setItem('fname', user.fname);\n        sessionStorage.setItem('lname', user.lname);\n        sessionStorage.setItem('role', user.role);\n        sessionStorage.setItem('email', user.email);\n\n        // update global store's authSlice with status = true\n        dispatch(login());\n\n        toast.success(`Welcome ${user.fname} to Garage Masters`);\n\n        if (user.role === 'ROLE_ADMIN') {\n          // Assuming outlet information is present in the user object\n          sessionStorage.setItem('outletId', user.outlet ? user.outlet.outletId : null);\n          history.push('/Dashboard');\n        } else {\n          history.push('/Services');\n        }\n      } else {\n        toast.error('Invalid user name or password');\n      }\n    } catch (error) {\n      console.error('Error during login:', error.response.data);\n      toast.error('An error occurred during login');\n    }\n  }\n\n    return((\n        <div className=\"container-fluid\" >\n            <br/><br/><br/><br/>\n          <h1 style={{ textAlign: 'center', margin: 10 }}>Login</h1>\n    \n          <div className='row'>\n            <div className='col'></div>\n            <div className='col'>\n              <div className='form'>\n                <div className='mb-3'>\n                  <label htmlFor=''>Email</label>\n                  <input\n                    type='text'\n                    className='form-control'\n                    onChange={(e) => {\n                      setEmail(e.target.value)\n                    }}\n                  />\n                </div>\n                <div className='mb-3'>\n                  <label htmlFor=''>Password</label>\n                  <input\n                    type='password'\n                    className='form-control'\n                    onChange={(e) => {\n                      setPassword(e.target.value)\n                    }}\n                  />\n                </div>\n                <div className='mb-3'>\n                  <div className='mb-3'>\n                    Don't have an account? <Link to='/SignUp'>Register here</Link>\n                  </div>\n                  <button onClick={loginUser} className='btn btn-success'>\n                    Login\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className='col'></div>\n          </div>\n        </div>\n      )\n    );\n\n}","/home/sanket/Downloads/Client/Client/src/Services.jsx",["107","108","109","110","111","112"],[],"import React from 'react';\nimport { useState,useEffect } from 'react'\nimport './Services.css';\nimport Footer from './Footer';\nimport Navbar from './Navbar';\nimport Navbar2 from './Navbar2';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport {RxCrossCircled} from 'react-icons/rx';\nimport {FaCartPlus} from 'react-icons/fa';\nimport { login } from './features/authSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify'\nimport { getManufac, getModelById, getOutlets, getServices, addToCart, RemoveFromCart, getCartById } from './services/user'\n\n\nexport default function ServicesPage() {\n  \n  const [selectedCar, setSelectedCar] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n\n  \n  // use selector accepts a function which passes the store global state\n  const loginStatus = useSelector((state) => state.auth.status)\n  console.log(loginStatus);\n    \n  const [outlets, setOutlets] = useState([]);\n  const [selectedOutlet, setSelectedOutlet] = useState('');\n  \n  const [cartItems, setCartItems] = useState([]);\n  \n  const [cars,setCars] = useState([]);\n  const [carModels,setCarModels] = useState([]);\n  \n  useEffect(() => {   \n    const fetchData = async () => {\n      try {\n        \n        const response = await getManufac();\n        const response2 = await getOutlets();\n        const response3 = await getServices();\n        \n        console.log(\"data\", response.data);\n        console.log(\"data\", response2.data);\n        console.log(\"data of services : \", response3.data);\n        \n        setCars(response.data);\n        debugger;\n        setOutlets(response2.data);\n        setServices(response3.data);\n\n        if(loginStatus == true)\n        {\n          var userId = sessionStorage.getItem('userId');\n          const response4 = await getCartById(userId);\n          console.log(\"data of services in cart : \", response4.data);\n          setCartItems(response4.data);\n        }\n        \n      } catch (error) {\n        console.error(error); \n      }\n    };\n    \n    fetchData();\n  }, [])\n\n\n  useEffect(() => {\n    const fetchCarModels = async () => {\n      try {\n        console.log(\"inside fetchCarModels\");\n        if (selectedCar) {\n          const response = await getModelById(selectedCar)\n          console.log(\"response -\", response);\n          console.log(\"data -\", response.data);\n          setCarModels(response.data);\n        }\n      } catch (error) {\n        console.error(error); \n      }\n    };\n    \n    fetchCarModels();\n  }, [selectedCar]); // Fetch when selectedCar changes\n  \n\n  const [services,setServices] = useState([]);\n\n  const history = useHistory();\n\n  const handleOutletChange = (args) => {\n    setSelectedOutlet(args.target.value);\n    console.log(\"selected outlet info - \", args.target.value)\n    // sessionStorage['outlet'] = args.target.value;\n  };\n\n  const handleCarChange = (args) => {\n    setSelectedCar(args.target.value);\n    setSelectedModel('');\n    console.log(\"selected manufacturer info - \", args.target.value)\n    // sessionStorage['car'] = args.target.value;\n  };\n\n  const handleModelChange = (args) => {\n    setSelectedModel(args.target.value);\n    console.log(\"selected model info - \", args.target.value)\n    // sessionStorage['model'] = args.target.value;\n  };\n\n\n  const AddToCart = async (service) => {\n        \n    if(loginStatus != true)\n    {\n      toast.warning('To add items to your cart, Please Log in or Create an account.')\n      history.push(\"/Login\");\n      return;\n    }\n\n    //getting userId of user from session storage and using it to add data to cart table\n    var userId = sessionStorage.getItem('userId');\n    \n    console.log(\"user Id of User - \",userId);\n    console.log(\"service Id of Service - \",service.serviceId);\n\n    const response = await addToCart(service.serviceId,userId);\n    console.log(response.data);\n\n    if (!cartItems.find(item => item.id === service.serviceId)) {\n      setCartItems([...cartItems, service]);\n    }\n  };\n\n  const removeCartItem = async (itemId) => {\n    var userId = sessionStorage.getItem('userId');\n    const response = await RemoveFromCart(itemId,userId);\n    console.log(response.data);\n    const updatedCartItems = cartItems.filter((item) => item.serviceId !== itemId);\n    setCartItems(updatedCartItems);\n  };\n\n  const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\n\n\n  const GoToPayments = () =>{\n\n    if (!selectedCar || !selectedModel || !selectedOutlet) {\n      toast.error('Please select a car manufacturer, model, and outlet before proceeding.');\n      return;\n    }\n    \n    history.push(\"/Payments\", {\n      car: selectedCar,\n      model: selectedModel,\n      outlet: selectedOutlet,\n    });\n  }\n\n  return (\n    <>\n      {!loginStatus && <Navbar/>}\n      {loginStatus &&<Navbar2/>}\n      <div style={{ minHeight: '65vh' }}>\n        <div className=\"container mt-5 \">\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <div className=\"card p-4 shadow\">\n                <h1 className=\"mb-4\">Choose a Car and Model</h1>\n                <div style={{ display: 'flex', gap: '20px' }}>\n                <div style={{ flex: 1 }}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"selectCar\">Select a Car:</label>\n                  <select\n                    id=\"selectCar\"\n                    className=\"form-control\"\n                    value={selectedCar}\n                    onChange={handleCarChange}\n                  >\n                    <option value=\"\">Select Car</option>\n                    {cars.map((car) => (\n                      <option key={car.manufacturerId} value={car.manufacturerId}>\n                        {car.manufacturerName}\n                      </option>\n                    ))}\n                  </select>\n                  {}\n                </div>\n                <div className=\"form-group mt-4\">\n                  <label htmlFor=\"selectModel\">Select a Model:</label>\n                  <select\n                    id=\"selectModel\"\n                    className=\"form-control\"\n                    value={selectedModel}\n                    onChange={handleModelChange}\n                    disabled={!selectedCar}\n                  >\n                    <option value=\"\">Select Model</option>\n                    {selectedCar &&\n                      carModels.map((model, index) => (     \n                        <option key={index} value={model.modelId}>\n                          {model.modelName}\n                          {console.log(\"model object -\",model.modelId)}\n                        </option>\n                      ))}\n                  </select>\n                </div>\n                <br/>\n                \n                <div style={{ flex: 1 }}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"selectOutlet\">Select an Outlet:</label>\n                    <select\n                      id=\"selectOutlet\"\n                      className=\"form-control\"\n                      value={selectedOutlet}\n                      onChange={handleOutletChange}\n                    >\n                      <option value=\"\">Select Outlet</option>\n                      {outlets.map((outlet,index) => (\n                        <option key={index} value={outlet.outletId}>\n                          {outlet.name} - {outlet.address}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                </div>\n                </div>\n\n                {/*selectedCar && selectedModel &&*/ \n                (\n                  <div>\n                    <br/>\n                    <h2>Services:</h2>\n                    {services.map((service) => (\n                      <div\n                        key={service.serviceId}\n                        className=\"card p-4 mt-3 shadow\"\n                      >\n                        <h3>{service.name}</h3>\n                        <p>Description: {service.description}</p>\n                        <p>Duration: {service.duration}</p>\n                        <p>Price: Rs.{service.price}</p>\n                        {cartItems.find(item => item.serviceId === service.serviceId) ? (\n                          <button className=\"btn btn-success\" disabled style={{width:'150px'}}>\n                            Added to Cart\n                          </button>\n                          \n                        ) : (\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={() => AddToCart(service)}\n                            style={{width:'150px'}}\n                          >\n                            Add to Cart\n                          </button>\n                          // <FaCartPlus onClick={() => AddToCart(service)} size=\"30px\"/>\n                          \n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-4\">\n              {cartItems.length > 0 && (\n                <div className=\"card p-4 shadow\">\n                  <h3>Shopping Cart</h3>\n                  <table className=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th colSpan=\"2\">Price</th>\n                        \n                      </tr>\n                    </thead>\n                    <tbody>\n                      {cartItems.map((item) => (\n                        <tr key={item.serviceId}>\n                          <td >{item.name}</td>\n                          <td>Rs.{item.price}</td>\n                          <td align=\"right\">\n                            {/* <button className=\"btn btn-danger\" onClick={() => removeCartItem(item.id)}>\n                              Remove</button> */}\n                            <RxCrossCircled className=\"text-danger\" size=\"18px\" onClick={() => removeCartItem(item.serviceId)}/>\n                          </td>\n                        </tr>\n                      ))}\n                      <tr>\n                        <td colSpan=\"2\" className=\"text-right\">\n                          Total:\n                        </td>\n                        <td>Rs.{totalPrice}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <button onClick={GoToPayments} className=\"btn btn-primary btn-block mt-3\">\n                    Proceed to Checkout\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","/home/sanket/Downloads/Client/Client/src/Home.jsx",[],[],"/home/sanket/Downloads/Client/Client/src/Profile.jsx",["113"],[],"import React, { useState, useEffect } from 'react';\nimport NavBar from './Navbar2';\nimport userLogo from './images/user-logo.png';\nimport { getAppointmentById } from './services/user';\n\nconst UserProfile = () => {\n\nconst fname = sessionStorage.getItem('fname');\nconst lname = sessionStorage.getItem('lname');\nconst userEmail = sessionStorage.getItem('email');\nconst userId = sessionStorage.getItem('userId');\n\n  const [activeTab, setActiveTab] = useState('profile');\n  const [appointments, setAppointments] = useState([]);\n\n  // Fetching Appointment on First Page Render\n  useEffect(() => {\n\n    const fetchAppointments = async () => {\n      // Axios Call to fetch appointments from DB\n      const response = await getAppointmentById(userId);\n      console.log(\"appointment details : \",response.data);\n      setAppointments(response.data);\n    };\n\n    fetchAppointments();\n  }, []);\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  return (\n    <>\n      <NavBar />\n      <br />\n      <br />\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 col-md-8\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <ul className=\"nav nav-tabs card-header-tabs\">\n                  <li className=\"nav-item\">\n                    <button\n                      className={`nav-link ${activeTab === 'profile' ? 'active' : ''}`}\n                      onClick={() => handleTabChange('profile')}\n                    >\n                      My Profile\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={`nav-link ${activeTab === 'appointments' ? 'active' : ''}`}\n                      onClick={() => handleTabChange('appointments')}\n                    >\n                      My Appointments\n                    </button>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"card-body\">\n                {activeTab === 'profile' && (\n                  <div className=\"user-details\">\n                    <div className=\"text-center\">\n                      <img\n                        src={userLogo} \n                        width={100}\n                        alt=\"User\"\n                        className=\"user-image img-fluid rounded-circle\"\n                      />\n                    </div>\n                    <p>First Name : {fname}</p>\n                    <p>Last Name : {lname}</p>\n                    <p>Email : {userEmail}</p>\n                  </div>\n                )}\n                {activeTab === 'appointments' && (\n  <div className=\"user-appointments\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n    <div className=\"appointment-list\">\n      {appointments.map((appointment) => (\n        <div key={appointment.id} className=\"appointment-item\">\n          <p>Date: {appointment.appointmentDate}</p>\n          <p>Time: {appointment.appointmentTime}</p>\n          <p>\n            Status: <strong style={{ fontWeight: 'bold', color: appointment.status ? 'green' : 'red'  }}>{appointment.status ? 'Serviced' : 'Pending'}</strong>\n          </p>\n          <hr />\n        </div>\n      ))}\n    </div>\n    \n  </div>\n)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserProfile;\n","/home/sanket/Downloads/Client/Client/src/Payments.jsx",["114"],[],"import React, { useState } from 'react';\nimport { Button, Form, Container, Row, Col, Image } from 'react-bootstrap';\nimport cc from './images/cc.jpg';\nimport paypal from './images/paypal.png';\nimport gpay from './images/gpay2.png';\nimport Navbar2 from './Navbar2';\nimport Footer from './Footer';\nimport { toast } from 'react-toastify'\nimport {useHistory} from 'react-router-dom';\nimport {saveAppointment,deleteFromCartForUser} from './services/user';\n\nconst Payments = (props) => {\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n  const totalAmount = 100;\n  const { car, model, outlet } = props.location.state;\n  const userId = sessionStorage.getItem('userId');\n\n  const history = useHistory();\n\n  const paymentMethods = [\n    { name: 'Credit Card', image: cc },\n    { name: 'PayPal', image: paypal },\n    { name: 'Google Pay', image: gpay },\n    // ... More payment methods\n  ];\n\n\n  const today = new Date();\n  const currentHour = today.getHours();\n\n  const validateDate = (date) => {\n    const selected = new Date(date);\n    return selected >= today;\n  };\n\n  const validateTime = (time) => {\n    const selectedHour = parseInt(time.split(':')[0]);\n    return selectedHour >= 9 && selectedHour <= 22 && (selectedHour > currentHour || (today.getDate() !== selectedDate.getDate()));\n  };\n\n  const handleDateChange = (date) => {\n    if (validateDate(date)) {\n      setSelectedDate(date);\n    } else {\n      toast.error('Please select a valid date.');\n    }\n  };\n\n  const handleTimeChange = (time) => {\n    if (validateTime(time)) {\n      setSelectedTime(time);\n    } else {\n      toast.error('Please select a valid time between 9 AM and 10 PM.');\n    }\n  };\n\n  const confirmPayment = async () => {\n    console.log(selectedDate);\n    console.log(selectedTime);\n    console.log(selectedPaymentMethod);\n\n      const response = await saveAppointment(\n        selectedDate, selectedTime, false , userId , outlet, car, model\n      );\n\n      const response1 = await deleteFromCartForUser(userId);\n    \n      console.log(response);\n      if (response != null) {\n        toast.success(`Payment Confirmed and Appointment Booked !!`);\n        history.push('/');\n      } else {\n        toast.error('Error while booking appointment...');\n      }\n    \n};\n\n  return (\n    <>\n    <Navbar2/>\n    <Container className=\"mt-4\">\n        <br/>\n      <h2>Select Appointment Date and Time</h2>\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Date</Form.Label>\n              <Form.Control type=\"date\" value={selectedDate} onChange={e => handleDateChange(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>Time</Form.Label>\n              <Form.Control\n                type=\"time\"\n                value={selectedTime}\n                onChange={e => handleTimeChange(e.target.value)}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n        <br/>\n      <h2>Select Payment Method</h2>\n      <Row>\n        {paymentMethods.map(method => (\n          <Col key={method.name} md={4} className=\"mb-3\">\n            <div className={`payment-method card ${selectedPaymentMethod === method ? 'selected' : ''}`} onClick={() => setSelectedPaymentMethod(method)}>\n              <Image src={method.image} alt={method.name} className=\"card-img-top\" style={{ height: '190px' }}/>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{method.name}</h5>\n              </div>\n            </div>\n          </Col>\n        ))}\n      </Row>\n            <br/>\n      <h2>Checkout Details</h2>\n      <div className=\"checkout-summary\">\n        <p>Appointment Date: {selectedDate}</p>\n        <p>Appointment Time: {selectedTime}</p>\n        <p>Selected Payment Method: {selectedPaymentMethod ? selectedPaymentMethod.name : ''}</p>\n        <p>Total Amount: {totalAmount}</p>\n\n        <Button variant=\"primary\" onClick={confirmPayment}>Confirm Payment</Button>\n      </div>\n    </Container>\n    <br/>\n    <br/>\n    <Footer/>\n    </>\n  );\n};\n\nexport default Payments;\n","/home/sanket/Downloads/Client/Client/src/SignUp.jsx",["115","116","117","118","119","120"],[],"import \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport { useState } from 'react'\nimport { Link , useHistory} from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { registerUser as registerUserApi } from './services/user'\n\nexport default function SignUp()\n{\n  const [fname, setFirstName] = useState('')\n  const [lname, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [role, setRole] = useState('Customer')\n  const [outlet_id, setOutlet] = useState(null)\n\n  // get the navigation object\n  const history = useHistory()\n\n  const registerUser = async () => {\n    if (fname.length == '') {\n      toast.error('Please enter first name')\n    } else if (lname.length == '') {\n      toast.error('Please enter last name')\n    } else if (email.length == '') {\n      toast.error('Please enter email')\n    } else if (password.length == '') {\n      toast.error('Please enter password')\n    } else if (confirmPassword.length == '') {\n      toast.error('Please confirm password')\n    } else if (password !== confirmPassword) {\n      toast.error('Password does not match')\n    } else {\n      // call register api\n      setOutlet(1);\n      console.log(outlet_id);\n      const response = await registerUserApi(\n        fname,\n        lname,\n        email,\n        password,\n        role,\n        outlet_id \n      )\n        console.log(response);\n      // parse the response\n      if (/*response['status'] == 200*/ response != null) {\n        toast.success('Successfully registered a new user')\n\n        // go back to login\n        history.push('/Login')\n      } else {\n        toast.error('Error while registering a new user, please try again')\n      }\n    }\n  }\n\n    return(<>\n        <div>\n            <br/>\n      <h1 style={{ textAlign: 'center', margin: 10 }}>Register User</h1>\n\n      <div className='row'>\n        <div className='col'></div>\n        <div className='col'>\n          <div className='form'>\n            <div className='mb-3'>\n              <label htmlFor=''>First Name</label>\n              <input\n                type='text'\n                className='form-control'\n                onChange={(e) => {\n                  setFirstName(e.target.value)\n                }}\n              />\n            </div>\n\n            <div className='mb-3'>\n              <label htmlFor=''>Last Name</label>\n              <input\n                type='text'\n                className='form-control'\n                onChange={(e) => {\n                  setLastName(e.target.value)\n                }}\n              />\n            </div>\n\n            <div className='mb-3'>\n              <label htmlFor=''>Email</label>\n              <input\n                type='text'\n                className='form-control'\n                onChange={(e) => {\n                  setEmail(e.target.value)\n                }}\n              />\n            </div>\n\n\n            <div className='mb-3'>\n              <label htmlFor=''>Password</label>\n              <input\n                type='password'\n                className='form-control'\n                onChange={(e) => {\n                  setPassword(e.target.value)\n                }}\n              />\n            </div>\n\n            <div className='mb-3'>\n              <label htmlFor=''>Confirm Password</label>\n              <input\n                type='password'\n                className='form-control'\n                onChange={(e) => {\n                  setConfirmPassword(e.target.value)\n                }}\n              />\n            </div>\n\n            <div className='mb-3'>\n              <div className='mb-3'>\n                Already got an account? <Link to='/Login'>Login here</Link>\n              </div>\n              <button onClick={registerUser} className='btn btn-success'>\n                Register\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className='col'></div>\n      </div>\n    </div>\n    </>)\n}","/home/sanket/Downloads/Client/Client/src/Dashboard.jsx",[],[],"/home/sanket/Downloads/Client/Client/src/PaymentList.jsx",[],[],"/home/sanket/Downloads/Client/Client/src/corousel.jsx",[],[],"/home/sanket/Downloads/Client/Client/src/Footer.jsx",[],[],"/home/sanket/Downloads/Client/Client/src/Navbar2.jsx",["121","122","123","124","125","126"],[],"import React, { useState, useEffect } from 'react';\nimport Logo from './images/Logo2.png';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from './features/authSlice';\nimport './Navbar.css';\n\nfunction Navbar() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // logout the user\n  const logoutUser = () => {\n    // clear the session storage changes\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('fname');\n    sessionStorage.removeItem('lname');\n    sessionStorage.removeItem('role');\n\n    // hide the navigation bar\n    dispatch(logout());\n\n    // redirect to the login page\n    history.push('/');\n  }\n\n  const [isNavActive, setNavActive] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  const toggleNav = () => {\n    setNavActive(!isNavActive);\n  };\n\n  const GoToServices = () => {\n    history.push(\"/Services\");\n  }\n\n  const GoToHome = () => {\n    history.push(\"/\");\n  }\n\n  const GoToProfile = () => {\n    history.push(\"/Profile\");\n  }\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 0) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-dark ${isScrolled ? 'fixed-top' : ''}`}>\n      <div className=\"container-fluid\">\n        <a onClick={GoToHome} className=\"navbar-brand\">\n          <img src={Logo} alt=\"Logo\" className=\"navbar-logo\" width=\"140\" height=\"auto\" align=\"left\" />\n        </a>\n        <button\n          className={`navbar-toggler ${isNavActive ? 'active' : ''}`}\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded={isNavActive ? 'true' : 'false'}\n          aria-label=\"Toggle navigation\"\n          onClick={toggleNav}\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className={`collapse navbar-collapse ${isNavActive ? 'show' : ''}`} id=\"navbarNav\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item\"><a onClick={GoToHome} className=\"nav-link\">Home</a></li>\n            <li className=\"nav-item\"><a onClick={GoToServices} className=\"nav-link\">Services</a></li>\n            <li className=\"nav-item\"><a onClick={GoToProfile} className=\"nav-link\">Account</a></li>\n            <li className=\"nav-item\"><a onClick={logoutUser} className=\"nav-link\">Log Out</a></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/home/sanket/Downloads/Client/Client/src/Navbar.jsx",["127","128","129","130"],[],"import React, { useState, useEffect } from 'react';\nimport Logo from './images/Logo2.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport './Navbar.css';\n\nfunction Navbar() {\n  const [isNavActive, setNavActive] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  const history = useHistory();\n\n  const toggleNav = () => {\n    setNavActive(!isNavActive);\n  };\n\n  const GoToServices = () => {\n    history.push(\"/Services\");\n  };\n\n  const GoToHome = () => {\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 0) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-dark ${isScrolled ? 'fixed-top' : ''}`}>\n      <div className=\"container-fluid\">\n        <a onClick={GoToHome} className=\"navbar-brand\">\n          <img src={Logo} alt=\"Logo\" className=\"navbar-logo\" width=\"140\" height=\"auto\" align=\"left\" />\n        </a>\n        <button\n          className={`navbar-toggler ${isNavActive ? 'active' : ''}`}\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded={isNavActive ? 'true' : 'false'}\n          aria-label=\"Toggle navigation\"\n          onClick={toggleNav}\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className={`collapse navbar-collapse ${isNavActive ? 'show' : ''}`} id=\"navbarNav\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item\"><a onClick={GoToHome} className=\"nav-link\">Home</a></li>\n            <li className=\"nav-item\"><a onClick={GoToServices} className=\"nav-link\">Services</a></li>\n            {/* <li className=\"nav-item\"><a className=\"nav-link\">Contact Us</a></li> */}\n            <li className=\"nav-item\"><a href=\"/Login\" className=\"nav-link\">Log In</a></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/home/sanket/Downloads/Client/Client/src/services/user.js",[],[],"/home/sanket/Downloads/Client/Client/src/utils/utils.js",[],[],"/home/sanket/Downloads/Client/Client/src/utils/constants.js",[],[],{"ruleId":"131","severity":1,"message":"132","line":1,"column":21,"nodeType":"133","messageId":"134","endLine":1,"endColumn":30},{"ruleId":"131","severity":1,"message":"135","line":12,"column":10,"nodeType":"133","messageId":"134","endLine":12,"endColumn":14},{"ruleId":"131","severity":1,"message":"136","line":12,"column":16,"nodeType":"133","messageId":"134","endLine":12,"endColumn":23},{"ruleId":"131","severity":1,"message":"137","line":9,"column":9,"nodeType":"133","messageId":"134","endLine":9,"endColumn":19},{"ruleId":"131","severity":1,"message":"138","line":10,"column":10,"nodeType":"133","messageId":"134","endLine":10,"endColumn":15},{"ruleId":"131","severity":1,"message":"139","line":11,"column":10,"nodeType":"133","messageId":"134","endLine":11,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":51,"column":24,"nodeType":"142","messageId":"143","endLine":51,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":65,"column":6,"nodeType":"146","endLine":65,"endColumn":8,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"148","line":113,"column":20,"nodeType":"142","messageId":"143","endLine":113,"endColumn":22},{"ruleId":"144","severity":1,"message":"149","line":27,"column":6,"nodeType":"146","endLine":27,"endColumn":8,"suggestions":"150"},{"ruleId":"131","severity":1,"message":"151","line":68,"column":13,"nodeType":"133","messageId":"134","endLine":68,"endColumn":22},{"ruleId":"131","severity":1,"message":"152","line":14,"column":16,"nodeType":"133","messageId":"134","endLine":14,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":21,"column":22,"nodeType":"142","messageId":"143","endLine":21,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":23,"column":29,"nodeType":"142","messageId":"143","endLine":23,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":25,"column":29,"nodeType":"142","messageId":"143","endLine":25,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":27,"column":32,"nodeType":"142","messageId":"143","endLine":27,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":29,"column":39,"nodeType":"142","messageId":"143","endLine":29,"endColumn":41},{"ruleId":"131","severity":1,"message":"153","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":65,"column":9,"nodeType":"156","endLine":65,"endColumn":56},{"ruleId":"154","severity":1,"message":"155","line":82,"column":38,"nodeType":"156","endLine":82,"endColumn":81},{"ruleId":"154","severity":1,"message":"155","line":83,"column":38,"nodeType":"156","endLine":83,"endColumn":85},{"ruleId":"154","severity":1,"message":"155","line":84,"column":38,"nodeType":"156","endLine":84,"endColumn":84},{"ruleId":"154","severity":1,"message":"155","line":85,"column":38,"nodeType":"156","endLine":85,"endColumn":83},{"ruleId":"131","severity":1,"message":"153","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":43,"column":9,"nodeType":"156","endLine":43,"endColumn":56},{"ruleId":"154","severity":1,"message":"155","line":60,"column":38,"nodeType":"156","endLine":60,"endColumn":81},{"ruleId":"154","severity":1,"message":"155","line":61,"column":38,"nodeType":"156","endLine":61,"endColumn":85},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'FaCartPlus' is defined but never used.","'login' is defined but never used.","'useDispatch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.","ArrayExpression",["157"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["158"],"'response1' is assigned a value but never used.","'setRole' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [loginStatus]",{"range":"163","text":"164"},"Update the dependencies array to be: [userId]",{"range":"165","text":"166"},[2091,2093],"[loginStatus]",[878,880],"[userId]"]